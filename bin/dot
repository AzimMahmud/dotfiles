#!/usr/bin/env bash

set -Eeuo pipefail # fail fast
trap cleanup SIGINT SIGTERM ERR EXIT # trap these exits and run the defined cleanup method

# Make sure we have a reference to where this script lives
script_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)

# The prefix for extension commands
command_prefix="$(basename ${BASH_SOURCE[0]})"

# This method is run upon exit, allowing for any necessary cleanup
cleanup() {
    trap - SIGINT SIGTERM ERR EXIT
    # script cleanup here
}

usage() {
    cat <<EOF
Usage: $(basename "${BASH_SOURCE[0]}") [-h] [-v] [-f] param_value arg1 [arg2...]

Script descrition here.

Available options:

-h, --help      Print this help and exit
-v, --verbose   Print script debug info
-f, --flag      Some flag description
-p, --param     Some param description
EOF
    exit
}

setup_colors() {
  if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
    NOFORMAT='\033[0m' RED='\033[0;31m' GREEN='\033[0;32m' ORANGE='\033[0;33m' BLUE='\033[0;34m' PURPLE='\033[0;35m' CYAN='\033[0;36m' YELLOW='\033[1;33m'
  else
    NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
  fi
}

msg() {
    echo >&2 -e "${1-}"
}

die() {
    local msg=$1
    local code=${2-1}
    msg "$msg"
    exit "$code"
}

parse_params() {
    # default values of variables set from params
    flag=0
    param=''

    while :; do
        arg="${1-}"
        if [[ -n "$arg" ]] && ! [[ "$arg" =~ ^-. ]]; then
            if [[ -x "$(command -v $command_prefix-$arg)" ]]; then
                command="$(which $command_prefix-$arg)"
                shift
                source "$command" "$@"
                exit $?
            else
                die "Command not found: $command_prefix-$arg"
            fi
        else
            case "$arg" in
                -h | --help) usage ;;
                -v | --verbose) set -x ;;
                --no-color) NO_COLOR=1 ;;
                -f | --flag) flag=1 ;; # example flag
                -p | --param) # example named paramater
                    param="${2-}"
                    shift
                    ;;
                -?*)
                    die "${RED}Unknown option:${NOFORMAT} $arg"
                    ;;
                *) break ;;
            esac
        fi
        shift
    done

    args=("$@")

    # check required params and arguments
    [[ -z "${param-}" ]] && die "Missing required parameter: param"
    [[ ${#args[@]} -eq 0 ]] && die "Missing script arguments"

    return 0
}

setup_colors
parse_params "$@"
